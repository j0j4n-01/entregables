<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Productos</title>

    <link href="public/css/crud.css">
    <link rel="stylesheet" href="css/main.css">
    <link rel="stylesheet" href="css/sweetalert2.css">
    <link rel="stylesheet" href="css/material.min.css">
    <link rel="stylesheet" href="css/jquery.mCustomScrollbar.css">
    <link rel="stylesheet" href="css/material-design-iconic-font.min.css">
    <link rel="stylesheet" href="vendor/datatables/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

</head>

<body>
    <!-- Notifications area -->
    {{>notifications }}
    <!-- navBar -->
    {{>navBar }}
    <!-- navLateral -->
    {{>navLateral }}

    <!-- pageContent -->
    <section class="full-width pageContent mt-4">
        {{!-- CRUD --}}
        <div id="wrapper">
            <div id="content-wrapper" class="d-flex flex-column">
                <div id="content">
                    <div class="container-fluid">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3 d-flex justify-content-between">
                                <h1>Productos</h1>
                                <h6 class="m-0 font-weight-bold text-primary"></h6>
                                <div>
                                    <button onclick="descargarExcel()" type="button" class="btn btn-dark">
                                        <i class="bi bi-file-earmark-arrow-down"></i> Informe
                                    </button>
                                    <button type="button" class="btn btn-success" data-bs-toggle="modal"
                                        data-bs-target="#createModal">
                                        <i class="bi bi-basket"></i> Agregar
                                    </button>
                                </div>
                            </div>

                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th>ID</th>
                                                <th>NOMBRE</th>
                                                <th>IMG</th>
                                                <th>CATEGORIA</th>
                                                <th>EXISTENCIAS</th>
                                                <th>MAX_EXIS</th>
                                                <th>MIN_EXIS</th>
                                                <th>ESTADO</th>
                                                <th>ACCIONES</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tablaproductos">
                                            <!-- Aquí se insertarán las filas de productos -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.container-fluid -->
                </div>
                <!-- End of Main Content -->
            </div>
            <!-- End of Content Wrapper -->
        </div>
    </section>

    {{!-- --------------------------------------------MODAL CREATE------------------------------------------ --}}
    <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Nuevo Producto</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    {{!-- formulario con validaciones --}}
                    <form class="needs-validation row g-3 form" id="createForm" novalidate>
                        <div class="col-md-6">
                            <label for="inputNombreProducto" class="form-label">Nombre producto<span
                                    class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="inputNombreProducto" pattern="[A-Za-z\s]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un nombre al producto.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="selectCategoriaProducto" class="form-label">Categoría producto<span
                                    class="text-danger">*</span>
                                <button id="alertButton" data-bs-toggle="modal" data-bs-target="#createModalcategori"
                                    type="button" class="btn btn-success" style="float: inline-end;">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </label>
                            <select class="form-select" id="selectCategoriaProducto" required>
                                <option value="">Selecciona una categoría</option>
                                <!-- Las opciones serán agregadas aquí por el script -->
                            </select>
                            <div class="invalid-feedback">Por favor selecciona una categoría para el producto.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputExistencias" class="form-label">Existencias<span
                                    class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="inputExistencias" pattern="[0-9]+" required>
                            <div class="invalid-feedback">Por favor ingresa una cantidad válida para las existencias.
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputMinimoExistencias" class="form-label">Mínimo de existencias<span
                                    class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="inputMinimoExistencias" pattern="[0-9]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un mínimo de existencias válido.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputMaximoExistencias" class="form-label">Máximo de existencias<span
                                    class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="inputMaximoExistencias" pattern="[0-9]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un máximo de existencias válido.</div>
                        </div>
                        <div class="mdl-textfield mdl-js-textfield">
                            <input type="file" id="inputImagenProducto">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button class="btn btn-primary submit-button" type="button" id="saveButton">Guardar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {{!------------------------------------------------MODAL EDIT ----------------------------------------------}}
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Editar Producto</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form class="row g-3 form" id="editForm">
                        <div class="col-md-6">
                            <label for="inputNombreCategoria" class="form-label">Nombre producto</label>
                            <input type="text" class="form-control" id="inputNombreproductoedit" pattern="[A-Za-z\s]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un nombre al producto.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputcategoriaproductoedit" class="form-label">Categoría </label>
                            <input type="text" class="form-control" id="inputcategoriaproductoedit" disabled>
                        </div>
                        <div class="col-md-6">
                            <label for="inputexisproductoedit" class="form-label">Existencias </label>
                            <input type="text" class="form-control" id="inputexisproductoedit" disabled>
                        </div>
                        <div class="col-md-6">
                            <label for="inputDescripcion" class="form-label">minimo.exs</label>
                            <input type="text" class="form-control" id="inputMinExisedit" pattern="[0-9]+" required>
                            <div class="invalid-feedback">Por favor ingresa un minimo de existencia valida.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputDescripcion" class="form-label">maximo.exs</label>
                            <input type="text" class="form-control" id="inputMaxExisedit" pattern="[0-9]+" required>
                            <div class="invalid-feedback">Por favor ingresa un maximo de existencia valida.</div>
                        </div>
                        <div class="mdl-textfield mdl-js-textfield">
                            <input type="file" id="inputImagenProductoedit">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button class="btn btn-primary submit-button" type="button" id="updateButton"
                                data-id="">Guardar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {{!------------------------------------------------MODAL VIEW DETAIL----------------------------------------}}
    <div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Detalle Producto</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="card" style="width: 100%;">
                        <div class="modal-body">
                            <div id="detailsCredit"
                                style="border: 1px solid #ccc; border-radius: 10px; padding: 20px; margin: 20px auto; width: 90%; max-width: 600px;">
                                <div class="card-body text-center">
                                    <p>----------------------------------------------------------</p>
                                    <div class="needs-validation row g-3 form">
                                        <div class="col-md-6">
                                            <p><b>Nombre producto</b></p>
                                            <p id="detalleNombreProducto"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><b>Categoria</b></p>
                                            <p id="detalleCategoriaProducto"></p>

                                        </div>
                                        <div class="col-md-6">
                                            <p><b>Existencias</b></p>
                                            <p id="detalleExistenciasProducto"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><b>Minimo existencias</b></p>
                                            <p id="detalleMinExisProducto"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><b>Maximo existencias</b></p>
                                            <p id="detalleMaxExisProducto"></p>
                                        </div>
                                    </div>
                                </div>
                                <p>--------------------------------------------------------------</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- endPageContent -->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const apiUrl = 'http://jhojansanchez-001-site1.etempurl.com/api/products';
            // Render productos function
            function renderProductos(productos) {
                const tbody = document.getElementById('tablaproductos');
                tbody.innerHTML = '';
                productos.forEach(productos => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                <td>${productos.id}</td>
                <td>${productos.nombre}</td>
                <td>${productos.img}</td>
                <td>${productos.categoryProduct}</td>
                <td>${productos.existencias}</td>
                <td>${productos.maxExistencia}</td>
                <td>${productos.minExistencias}</td>
                <td>${productos.estado}</td>
                <td>
                    <div style="display: flex; justify-content: center; align-items: center;">
                        <div style="margin-right: 10px;">
                            <div class="form-check form-switch ">
                                <input class="form-check-input" type="checkbox" role="switch" checked onclick="alertSuccesClients()">
                            </div>
                        </div>
                        <button style="margin-right:5px" class="btn btn-primary p-2 view-button" data-id="${productos.id}" data-bs-toggle="modal" data-bs-target="#viewModal"><i class="bi bi-eye-fill"></i></button>
                        <button style="margin-right:5px" class="btn btn-warning p-2 edit-button" data-id="${productos.id}" data-bs-toggle="modal" data-bs-target="#editModal"><i class="bi bi-pen"></i></button>
                        <button class="btn btn-danger p-2 delete-button" data-id="${productos.id}"><i class="bi bi-trash-fill"></i></button>
                    </div>
                </td>
            `;
                    tbody.appendChild(tr);
                });

                document.querySelectorAll('.delete-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        confirmDeleteProducto(id);
                    });
                });

                document.querySelectorAll('.view-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        viewProductosDetails(id);
                    });
                });

                document.querySelectorAll('.edit-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        loadProductosDetails(id);
                    });
                });
            }

            axios.get(apiUrl)
                .then(response => {
                    const productos = response.data;
                    renderProductos(productos);
                })
                .catch(error => {
                    console.error('Error al obtener los productos:', error);
                });

            // CREATE PRODUCTOS API

            document.getElementById('saveButton').addEventListener('click', function () {
                const form = document.getElementById('createForm');
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                const nombre = document.getElementById('inputNombreProducto').value;
                const img = document.getElementById('inputImagenProducto').value;
                const categoryProductId = document.getElementById('selectCategoriaProducto').value;
                const existencias = document.getElementById('inputExistencias').value;
                const maxExistencia = document.getElementById('inputMaximoExistencias').value;
                const minExistencias = document.getElementById('inputMinimoExistencias').value;

                const nuevoProducto = {
                    nombre: nombre,
                    img: img,
                    categoryProductId: categoryProductId,
                    existencias: existencias,
                    maxExistencia: maxExistencia,
                    minExistencias: minExistencias,
                    estado: true
                };

                axios.post(apiUrl, nuevoProducto)
                    .then(response => {
                        $('#createModal').modal('hide');
                        form.reset();
                        form.classList.remove('was-validated');

                        // Recargar la página
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error al crear el producto:', error);
                    });
            });

            // DELETE PRODUCTS
            function confirmDeleteProducto(id) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esto",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteProducto(id);
                    }
                });
            }
            function deleteProducto(id) {
                axios.delete(`${apiUrl}/${id}`)
                    .then(response => {
                        axios.get(apiUrl)
                            .then(response => {
                                const productos = response.data;
                                renderProductos(productos);
                                Swal.fire(
                                    'Eliminado',
                                    'La categoría ha sido eliminada.',
                                    'success'
                                );
                            })
                            .catch(error => {
                                console.error('Error al obtener los productos:', error);
                            });
                    })
                    .catch(error => {
                        console.error('Error al eliminar el productos:', error);
                    });
            }

            // DETAILS PRODUCTOS
            function viewProductosDetails(id) {
                axios.get(`${apiUrl}/${id}`)
                    .then(response => {
                        const producto = response.data;
                        document.getElementById('detalleNombreProducto').innerText = producto.nombre;
                        document.getElementById('detalleCategoriaProducto').innerText = producto.categoryProductId;
                        document.getElementById('detalleExistenciasProducto').innerText = producto.existencias;
                        document.getElementById('detalleMinExisProducto').innerText = producto.minExistencias;
                        document.getElementById('detalleMaxExisProducto').innerText = producto.maxExistencia;
                    })
                    .catch(error => {
                        console.error('Error al obtener los detalles de los productos:', error);
                    });
            }

            // EDIT CATEGORIE
            // SHOW DATA
            function loadProductosDetails(id) {
                axios.get(`${apiUrl}/${id}`)
                    .then(response => {
                        const producto = response.data;
                        document.getElementById('inputNombreproductoedit').value = producto.nombre;
                        document.getElementById('inputMinExisedit').value = producto.minExistencias;
                        document.getElementById('inputMaxExisedit').value = producto.maxExistencia;
                        document.getElementById('inputcategoriaproductoedit').value = producto.categoryProductId;
                        document.getElementById('inputexisproductoedit').value = producto.existencias;
                        // Al campo de data-id en el botón de guardar en la modal de editar, le asigno un valor.
                        document.getElementById('updateButton').setAttribute('data-id', id);
                    })
                    .catch(error => {
                        console.error('Error al cargar los detalles del producto:', error);
                    });
            }

            // UPDATE DATA
            document.getElementById('updateButton').addEventListener('click', function updateproductos() {
                const form = document.getElementById('editForm');

                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }
                // Obtengo el ID del atributo data-id del botón
                const id = this.getAttribute('data-id');
                const nombre = document.getElementById('inputNombreproductoedit').value;
                const minExistencias = document.getElementById('inputMinExisedit').value;
                const maxExistencia = document.getElementById('inputMaxExisedit').value;
                const img = document.getElementById('inputImagenProductoedit').value;
                const categoryProductId = document.getElementById('inputcategoriaproductoedit').value;
                const existencias = document.getElementById('inputexisproductoedit').value;

                const productoActualizado = {
                    id: id,
                    nombre: nombre,
                    img: img,
                    categoryProductId: categoryProductId,
                    existencias: existencias,
                    maxExistencia: maxExistencia,
                    minExistencias: minExistencias,
                    estado: true
                };

                axios.put(`${apiUrl}/${id}`, productoActualizado)
                    .then(response => {
                        $('#editModal').modal('hide');
                        form.reset();
                        form.classList.remove('was-validated');

                        axios.get(apiUrl)
                            .then(response => {
                                const productos = response.data;
                                renderProductos(productos);
                            })
                            .catch(error => {
                                console.error('Error al obtener los productos:', error);
                            });
                    })
                    .catch(error => {
                        console.error('Error al actualizar el producto:', error);
                    });
            });
        });

    </script>
    {{!-- consumir api categorias en el select --}}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetch('http://jhojansanchez-001-site1.etempurl.com/api/categories')
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('selectCategoriaProducto');
                    data.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category.id;  // Ajusta esto según el formato de tu API
                        option.textContent = category.nombre;  // Ajusta esto según el formato de tu API
                        select.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error fetching categories:', error);
                });
        });
    </script>
    {{!-- descargar exel --}}
    <script>
        function descargarExcel() {
            var link = document.createElement('a');
            link.href = 'ruta/al/archivo/informe.xlsx'; // Ruta al archivo Excel que deseas descargar
            link.download = 'informe.xlsx'; // Nombre del archivo que se descargará, puedes cambiarlo si lo necesitas
            link.click();
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="js/jquery-1.11.2.min.js"></script>
    <script src="vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="js/datatables.js"></script>
    <script src="js/jquery.mCustomScrollbar.concat.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="js/sweetalert2.min.js"></script>
    <script src="js/main.js"></script>
    {{!--
    <script src="js/scripts.js"></script> --}}
    <script src="js/alerts.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>



</body>

</html>