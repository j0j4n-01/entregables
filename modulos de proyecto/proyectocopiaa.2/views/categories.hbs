<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Categorias</title>

    <link rel="stylesheet" href="public/css/crud.css">
    <link rel="stylesheet" href="css/main.css">
    <link rel="stylesheet" href="css/sweetalert2.css">
    <link rel="stylesheet" href="css/material.min.css">
    <link rel="stylesheet" href="css/jquery.mCustomScrollbar.css">
    <link rel="stylesheet" href="css/material-design-iconic-font.min.css">
    <link rel="stylesheet" href="vendor/datatables/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>

<body>
    <!-- Notifications area -->
    {{>notifications }}
    <!-- navBar -->
    {{>navBar }}
    <!-- navLateral -->
    {{>navLateral }}

    <!-- pageContent -->
    <section class="full-width pageContent">
        {{!-- CRUD --}}
        <div class="mt-4" id="wrapper">
            <div id="content-wrapper" class="d-flex flex-column">
                <div id="content">
                    <div class="container-fluid">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3 d-flex justify-content-between">
                                <h1>Categorias</h1>
                                <h6 class="m-0 font-weight-bold text-primary"></h6>
                                <button type="button" class="btn btn-success" data-bs-toggle="modal"
                                    data-bs-target="#createModal">
                                    <i class="zmdi zmdi-label"></i> Agregar
                                </button>
                            </div>
                            <div class="card-body text-center">
                                <div class="table-responsive">
                                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th>ID</th>
                                                <th>NOMBRE</th>
                                                <th>DESCRIPCION</th>
                                                <th>ESTADO</th>
                                                <th>ACCIONES</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tablacategoria">
                                            <!-- Las filas se llenarán dinámicamente con JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <!-- /.container-fluid -->
                    </div>
                    <!-- End of Main Content -->
                </div>
                <!-- End of Content Wrapper -->
            </div>
        </div>
    </section>

    {{!-- --------------------------------------------MODAL CREATE------------------------------------------ --}}
    <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Nueva Categoria</h1>
                </div>
                <div class="modal-body">
                    <form class="row g-3 form needs-validation" id="createForm" novalidate>
                        <div class="col-md-6">
                            <label for="inputNombreCategoria" class="form-label">Nombre Categoria<span
                                    class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="inputNombreCategoria" pattern="[A-Za-z\s]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un nombre de categoría válido.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="inputDescripcion" class="form-label">Descripción</label>
                            <input type="text" class="form-control" id="inputDescripcion" pattern="[A-Za-z\s]+">
                            <div class="invalid-feedback">Por favor ingresa una descripción válida.</div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button class="btn btn-primary submit-button" type="button" id="saveButton">Guardar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    {{!-- ------------------------------------------- MODAL EDIT -------------------------------------------- --}}
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="editModalLabel">Editar Categoria</h1>
                </div>
                <div class="modal-body">
                    <form class="row g-3 form" id="editForm">
                        <div class="col-md-6">
                            <label for="editNombreCategoria" class="form-label">Nombre Categoria</label>
                            <input type="text" class="form-control" id="editNombreCategoria" pattern="[A-Za-z\s]+"
                                required>
                            <div class="invalid-feedback">Por favor ingresa un nombre de categoría válido.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="editDescripcion" class="form-label">Descripción</label>
                            <input type="text" class="form-control" id="editDescripcion" pattern="[A-Za-z\s]+" required>
                            <div class="invalid-feedback">Por favor ingresa una descripción válida.</div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            {{!-- Le agregué el atributo data-id --}}
                            <button class="btn btn-primary submit-button" type="button" id="updateButton"
                                data-id="">Guardar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    {{!-- --------------------------------------- MODAL VIEW DETAILS----------------------------------------------}}
    <div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Detalle Categoria</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="detailsCredit"
                    style="border: 1px solid #ccc; border-radius: 10px; padding: 20px; margin: 20px auto; width: 90%; max-width: 600px;">
                    <div class="card-body text-center">
                        <p>--------------------------------------------------------------</p>
                        <div class="needs-validation row g-3 form">
                            <div class="col-md-6">
                                <p><b>Nombre categoria</b></p>
                                <p id="detalleNombreCategoria"></p>
                            </div>
                            <div class="col-md-6">
                                <p><b>Descripción</b></p>
                                <p id="detalleDescripcion"></p>
                            </div>
                        </div>
                        <p>--------------------------------------------------------------</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- endPageContent -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const apiUrl = 'http://jhojansanchez-001-site1.etempurl.com/api/Categories';
            // Render categories function
            function renderCategoria(categorias) {
                const tbody = document.getElementById('tablacategoria');
                tbody.innerHTML = '';
                categorias.forEach(categoria => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                <td>${categoria.id}</td>
                <td>${categoria.nombre}</td>
                <td>${categoria.descripcion}</td>
                <td>${categoria.estado}</td>
                <td>
                    <div style="display: flex; justify-content: center; align-items: center;">
                        <div style="margin-right: 10px;">
                            <div class="form-check form-switch ">
                                <input class="form-check-input" type="checkbox" role="switch" checked onclick="alertSuccesClients()">
                            </div>
                        </div>
                        <button style="margin-right:5px" class="btn btn-primary p-2 view-button" data-id="${categoria.id}" data-bs-toggle="modal" data-bs-target="#viewModal"><i class="bi bi-eye-fill"></i></button>
                        <button style="margin-right:5px" class="btn btn-warning p-2 edit-button" data-id="${categoria.id}" data-bs-toggle="modal" data-bs-target="#editModal"><i class="bi bi-pen"></i></button>
                        <button class="btn btn-danger p-2 delete-button" data-id="${categoria.id}"><i class="bi bi-trash-fill"></i></button>
                    </div>
                </td>
            `;
                    tbody.appendChild(tr);
                });

                document.querySelectorAll('.delete-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        confirmDeleteCategoria(id);
                    });
                });

                document.querySelectorAll('.view-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        viewCategoriaDetails(id);
                    });
                });

                document.querySelectorAll('.edit-button').forEach(button => {
                    button.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        loadCategoriaDetails(id);
                    });
                });
            }

            axios.get(apiUrl)
                .then(response => {
                    const categorias = response.data;
                    renderCategoria(categorias);
                })
                .catch(error => {
                    console.error('Error al obtener las categorías:', error);
                });

            // CREATE CATEGORIES API

            document.getElementById('saveButton').addEventListener('click', function () {
                const form = document.getElementById('createForm');
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                const nombre = document.getElementById('inputNombreCategoria').value;
                const descripcion = document.getElementById('inputDescripcion').value;

                const nuevaCategoria = {
                    nombre: nombre,
                    descripcion: descripcion,
                    estado: true
                };

                axios.post(apiUrl, nuevaCategoria)
                    .then(response => {
                        $('#createModal').modal('hide');
                        form.reset();
                        form.classList.remove('was-validated');

                        // Recargar la página
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error al crear la categoría:', error);
                    });
            });

            // DELETE CATEGORIE

            function confirmDeleteCategoria(id) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esto",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteCategoria(id);
                    }
                });
            }

            function deleteCategoria(id) {
                axios.delete(`${apiUrl}/${id}`)
                    .then(response => {
                        axios.get(apiUrl)
                            .then(response => {
                                const categorias = response.data;
                                renderCategoria(categorias);
                                Swal.fire(
                                    'Eliminado',
                                    'La categoría ha sido eliminada.',
                                    'success'
                                );
                            })
                            .catch(error => {
                                console.error('Error al obtener las categorías:', error);
                            });
                    })
                    .catch(error => {
                        console.error('Error al eliminar la categoría:', error);
                    });
            }

            // DETAILS CATEGORIE
            function viewCategoriaDetails(id) {
                axios.get(`${apiUrl}/${id}`)
                    .then(response => {
                        const categoria = response.data;
                        document.getElementById('detalleNombreCategoria').innerText = categoria.nombre;
                        document.getElementById('detalleDescripcion').innerText = categoria.descripcion;
                    })
                    .catch(error => {
                        console.error('Error al obtener los detalles de la categoría:', error);
                    });
            }

            // EDIT CATEGORIE
            // SHOW DATA
            function loadCategoriaDetails(id) {
                axios.get(`${apiUrl}/${id}`)
                    .then(response => {
                        const categoria = response.data;
                        document.getElementById('editNombreCategoria').value = categoria.nombre;
                        document.getElementById('editDescripcion').value = categoria.descripcion;

                        // Al campo de data-id en el botón de guardar en la modal de editar, le asigno un valor.
                        document.getElementById('updateButton').setAttribute('data-id', id);
                    })
                    .catch(error => {
                        console.error('Error al cargar los detalles de la categoría:', error);
                    });
            }

            // UPDATE DATA
            document.getElementById('updateButton').addEventListener('click', function updateCategorie() {
                const form = document.getElementById('editForm');

                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }
                // Obtengo el ID del atributo data-id del botón
                const id = this.getAttribute('data-id');
                const nombre = document.getElementById('editNombreCategoria').value;
                const descripcion = document.getElementById('editDescripcion').value;

                const categoriaActualizada = {
                    id: id,
                    nombre: nombre,
                    descripcion: descripcion,
                    estado: true
                };

                axios.put(`${apiUrl}/${id}`, categoriaActualizada)
                    .then(response => {
                        $('#editModal').modal('hide');
                        form.reset();
                        form.classList.remove('was-validated');

                        axios.get(apiUrl)
                            .then(response => {
                                const categorias = response.data;
                                renderCategoria(categorias);
                            })
                            .catch(error => {
                                console.error('Error al obtener las categorías:', error);
                            });
                    })
                    .catch(error => {
                        console.error('Error al actualizar la categoría:', error);
                    });
            });
        });

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="js/jquery-1.11.2.min.js"></script>
    <script src="vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="js/datatables.js"></script>
    <script src="js/jquery.mCustomScrollbar.concat.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="js/sweetalert2.min.js"></script>
    <script src="js/main.js"></script>
    {{!-- <script src="js/scripts.js"></script> --}}
    <script src="js/alerts.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>

</html>